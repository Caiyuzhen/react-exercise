{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\"; //引入 react 包\n//⚡️⚡️⚡️ 组件通信(让组件内的数据 state 进行可以进行流转)\n//🍎父子关系\n//最重要的\n//HOW (子传父）\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n//🍎类组件 Father\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Father extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      message: '我是父组件的 state 数据',\n      list: [1, 2, 3],\n      userInfo: {\n        name: 'cp',\n        age: 18\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n; //🍎函数式 Son\n\nfunction SonA(_ref) {\n  let {\n    msg,\n    list,\n    userInfo,\n    getMsg,\n    child\n  } = _ref;\n  // function SonA (props) { //props 是一个对象，存着父组件传过来的数据\n  //👉解构赋值方法（方法二：声明赋值）\n  // const { msg, list, userInfo, getMsg, child } = props\n  return (\n    /*#__PURE__*/\n    //👇 通过 【props】 来接受父组件传过来的数据，其中列表为【遍历 list】 这个数组然后【放到】<p></p> 内，最后价格【key】\n    _jsxDEV(\"div\", {\n      children: [\"\\u6211\\u662F SonA \\u5B50\\u7EC4\\u4EF6,\", msg, \",\", list.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", item, \" \"]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)), \" ,\", userInfo.name, \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMsg,\n        children: \"\\u6267\\u884C\\u7236\\u7EC4\\u4EF6\\u4E2D\\u7684\\u51FD\\u6570\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), child]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = SonA;\n; //🍎类组件 Son\n\nclass SonB extends React.Component {\n  render(props) {\n    return (\n      /*#__PURE__*/\n      //👇 通过 【props】 来接受父组件传过来的数据\n      _jsxDEV(\"div\", {\n        children: [\"\\u6211\\u662F SonB \\u7C7B\\u7EC4\\u4EF6\", this.props.msg, \",\", this.props.list.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", item, \" \"]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 38\n        }, this)), \",\", this.props.userInfo.name, \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.getMsg,\n          children: \"\\u6267\\u884C\\u7236\\u7EC4\\u4EF6\\u4E2D\\u7684\\u51FD\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\n; //——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n//最后需要 export 一下！\n\nexport default Father;\n\nvar _c;\n\n$RefreshReg$(_c, \"SonA\");","map":{"version":3,"names":["React","Father","Component","state","message","list","userInfo","name","age","render","SonA","msg","getMsg","child","map","item","SonB","props"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\"//引入 react 包\n\n\n//⚡️⚡️⚡️ 组件通信(让组件内的数据 state 进行可以进行流转)\n//🍎父子关系\n//最重要的\n  //HOW (子传父）\n\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n\n\n\n//🍎类组件 Father\nclass Father extends React.Component {\n  state = {\n    message: '我是父组件的 state 数据',\n    list: [1, 2, 3],\n    userInfo: {\n      name: 'cp',\n      age: 18\n    }\n  }\n\n\n  render () {\n    return (\n      <div>\n\n      </div>\n    )\n  }\n};\n\n\n\n//🍎函数式 Son\n\nfunction SonA ({ msg, list, userInfo, getMsg, child }) {\n\n  // function SonA (props) { //props 是一个对象，存着父组件传过来的数据\n\n  //👉解构赋值方法（方法二：声明赋值）\n  // const { msg, list, userInfo, getMsg, child } = props\n\n  return (\n    //👇 通过 【props】 来接受父组件传过来的数据，其中列表为【遍历 list】 这个数组然后【放到】<p></p> 内，最后价格【key】\n    <div>\n      我是 SonA 子组件,\n      {/* 写法一，比较啰嗦，得一直写 props */}\n      {/* { props.msg },\n        { props.list.map(item=><p key={item}> {item} </p>) } , \n        { props.userInfo.name},\n        <button onClick=\n          { props.getMsg }\n        >执行父组件中的函数</button>\n        { props.child } */}\n\n      {/* 写法二，比较简洁，先在上方写了解构赋值 */}\n      {msg},\n      {list.map(item => <p key={item}> {item} </p>)} ,\n      {userInfo.name},\n      <button onClick=\n        {getMsg}\n      >执行父组件中的函数</button>\n      {child}\n    </div>\n  )\n};\n\n\n\n//🍎类组件 Son\nclass SonB extends React.Component {\n  render (props) {\n    return (\n      //👇 通过 【props】 来接受父组件传过来的数据\n      <div>\n        我是 SonB 类组件\n        {this.props.msg},\n        {this.props.list.map(item => <p key={item}> {item} </p>)},\n        {this.props.userInfo.name},\n        <button onClick=\n          {this.props.getMsg}\n        >执行父组件中的函数</button>\n      </div>\n    )\n  }\n};\n\n\n\n\n\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n\n\n\n\n//最后需要 export 一下！\nexport default Father\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyB;AAGzB;AACA;AACA;AACE;AAEF;AAKA;;;;AACA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;EAAA;IAAA;IAAA,KACnCC,KADmC,GAC3B;MACNC,OAAO,EAAE,iBADH;MAENC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFA;MAGNC,QAAQ,EAAE;QACRC,IAAI,EAAE,IADE;QAERC,GAAG,EAAE;MAFG;IAHJ,CAD2B;EAAA;;EAWnCC,MAAM,GAAI;IACR,oBACE;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAjBkC;;AAkBpC,C,CAID;;AAEA,SAASC,IAAT,OAAuD;EAAA,IAAxC;IAAEC,GAAF;IAAON,IAAP;IAAaC,QAAb;IAAuBM,MAAvB;IAA+BC;EAA/B,CAAwC;EAErD;EAEA;EACA;EAEA;IAAA;IACE;IACA;MAAA,oDAYGF,GAZH,OAaGN,IAAI,CAACS,GAAL,CAASC,IAAI,iBAAI;QAAA,gBAAgBA,IAAhB;MAAA,GAAQA,IAAR;QAAA;QAAA;QAAA;MAAA,QAAjB,CAbH,QAcGT,QAAQ,CAACC,IAdZ,oBAeE;QAAQ,OAAO,EACZK,MADH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF,EAkBGC,KAlBH;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAuBD;;KA9BQH,I;AA8BR,C,CAID;;AACA,MAAMM,IAAN,SAAmBhB,KAAK,CAACE,SAAzB,CAAmC;EACjCO,MAAM,CAAEQ,KAAF,EAAS;IACb;MAAA;MACE;MACA;QAAA,mDAEG,KAAKA,KAAL,CAAWN,GAFd,OAGG,KAAKM,KAAL,CAAWZ,IAAX,CAAgBS,GAAhB,CAAoBC,IAAI,iBAAI;UAAA,gBAAgBA,IAAhB;QAAA,GAAQA,IAAR;UAAA;UAAA;UAAA;QAAA,QAA5B,CAHH,OAIG,KAAKE,KAAL,CAAWX,QAAX,CAAoBC,IAJvB,oBAKE;UAAQ,OAAO,EACZ,KAAKU,KAAL,CAAWL,MADd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;EAYD;;AAdgC;;AAelC,C,CAMD;AAMA;;AACA,eAAeX,MAAf"},"metadata":{},"sourceType":"module"}