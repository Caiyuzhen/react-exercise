{"ast":null,"code":"var _jsxFileName = \"/Users/Youzen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\"; //引入 react 包\n//⚡️⚡️⚡️ 组件通信(让组件内的数据 state 进行可以进行流转)\n//🍎父子关系\n//HOW (子传父）\n//关键:父组件准备一个函数, 子组件调用父组件传过来的函数, 并且把想要传递的数据作为函数的实参\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n//🍎类组件 Father\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Father extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list: [1, 2, 3]\n    };\n\n    this.getMsgToSon = sonMsgXXX => {\n      //定义一个参数，接受子组件回传的数据\n      console.log(sonMsgXXX);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SonA, {\n        getMsgToSon: this.getMsgToSon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n; //🍎函数式 Son\n\nfunction SonA(props) {\n  //props 包含了所有父组件传过来的参数\n  const {\n    getMsgToSon\n  } = props; //解构赋值\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u8FD9\\u662F\\u5B50\\u7EC4\\u4EF6\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getMsgToSon('这是来自于子组件的数据'),\n      children: \"\\u7528\\u7BAD\\u5934\\u51FD\\u6570\\u7684\\u65B9\\u5F0F\\u7ED9\\u7236\\u7EC4\\u4EF6\\u4F20\\u6570\\u636E\\uFF01\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SonA;\n; //最后需要 export 一下！\n\nexport default Father;\n\nvar _c;\n\n$RefreshReg$(_c, \"SonA\");","map":{"version":3,"names":["React","Father","Component","state","list","getMsgToSon","sonMsgXXX","console","log","render","SonA","props"],"sources":["/Users/Youzen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\"//引入 react 包\n\n\n//⚡️⚡️⚡️ 组件通信(让组件内的数据 state 进行可以进行流转)\n//🍎父子关系\n\n  //HOW (子传父）\n      //关键:父组件准备一个函数, 子组件调用父组件传过来的函数, 并且把想要传递的数据作为函数的实参\n\n\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n\n//🍎类组件 Father\nclass Father extends React.Component {\n  state = {\n    list: [1, 2, 3],\n  }\n\n  //1.准备一个函数传给子组件()\n  getMsgToSon = ( sonMsgXXX ) => { //定义一个参数，接受子组件回传的数据\n      console.log(sonMsgXXX)\n  }\n\n  render () {\n    return (\n      <div>\n        <SonA \n          getMsgToSon = { this.getMsgToSon} \n        />\n      </div>\n    )\n  }\n};\n\n\n\n//🍎函数式 Son\n\nfunction SonA (props) { //props 包含了所有父组件传过来的参数\n\n  const { getMsgToSon } = props //解构赋值\n\n  return (\n    <div>\n      这是子组件\n      <br />\n      <button onClick = { ()=>getMsgToSon(\n        \n        '这是来自于子组件的数据'\n        ) }>用箭头函数的方式给父组件传数据！！</button> \n    </div>\n  )\n};\n\n\n\n//最后需要 export 一下！\nexport default Father\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyB;AAGzB;AACA;AAEE;AACI;AAGN;AAGA;;;;AACA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;EAAA;IAAA;IAAA,KACnCC,KADmC,GAC3B;MACNC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;IADA,CAD2B;;IAAA,KAMnCC,WANmC,GAMnBC,SAAF,IAAiB;MAAE;MAC7BC,OAAO,CAACC,GAAR,CAAYF,SAAZ;IACH,CARkC;EAAA;;EAUnCG,MAAM,GAAI;IACR,oBACE;MAAA,uBACE,QAAC,IAAD;QACE,WAAW,EAAK,KAAKJ;MADvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;AAlBkC;;AAmBpC,C,CAID;;AAEA,SAASK,IAAT,CAAeC,KAAf,EAAsB;EAAE;EAEtB,MAAM;IAAEN;EAAF,IAAkBM,KAAxB,CAFoB,CAEU;;EAE9B,oBACE;IAAA,0DAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAK,MAAIN,WAAW,CAEjC,aAFiC,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAdQK,I;AAcR,C,CAID;;AACA,eAAeT,MAAf"},"metadata":{},"sourceType":"module"}