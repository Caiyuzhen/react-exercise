{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\"; //引入 react 包\n// //写法一 🚀🚀🚀 在初始化阶段去修正 this 的老写法\n// class Test extends React.Component {\n//   //在初始化的阶段里边用去 bind（ ）去绑定 this\n//   constructor() {\n//     super()\n//     this.handler = this.handler.bind(this) //不绑定则会 undefined\n//   }\n//   handler() { //🍎：老的方法在用普通函数去定义的方法时候，在 react 中 this 的指向会变为 undefined\n//     console.log(this)\n//   }\n//   render() {\n//       return(\n//         <button onClick={ this.handler }>点击我</button>\n//       )\n//   }\n// }\n// //写法二 🚀🚀🚀 在【事件绑定的位置】采用【箭头函数】的写法来修正\n// class Test extends React.Component {\n//   handler() { //🍎：老的方法在用普通函数去定义的方法时候，在 react 中 this 的指向会变为 undefined\n//     console.log(this)\n//   }\n//   render() {\n//       return(\n//         <button onClick={ ()=> this.handler() }>点击我</button>\n//       )\n//   }\n// }\n//写法三 🚀🚀🚀 标准的写法\n//渲染类组件(根组件)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n} //最后需要 export 一下！\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\"//引入 react 包\n\n\n\n// //写法一 🚀🚀🚀 在初始化阶段去修正 this 的老写法\n// class Test extends React.Component {\n\n  \n//   //在初始化的阶段里边用去 bind（ ）去绑定 this\n//   constructor() {\n//     super()\n//     this.handler = this.handler.bind(this) //不绑定则会 undefined\n//   }\n\n  \n//   handler() { //🍎：老的方法在用普通函数去定义的方法时候，在 react 中 this 的指向会变为 undefined\n//     console.log(this)\n//   }\n\n//   render() {\n//       return(\n//         <button onClick={ this.handler }>点击我</button>\n//       )\n//   }\n// }\n\n\n// //写法二 🚀🚀🚀 在【事件绑定的位置】采用【箭头函数】的写法来修正\n// class Test extends React.Component {\n\n//   handler() { //🍎：老的方法在用普通函数去定义的方法时候，在 react 中 this 的指向会变为 undefined\n//     console.log(this)\n//   }\n\n//   render() {\n//       return(\n//         <button onClick={ ()=> this.handler() }>点击我</button>\n//       )\n//   }\n// }\n\n\n//写法三 🚀🚀🚀 标准的写法\n\n\n\n//渲染类组件(根组件)\nfunction App () {\n  return (\n      <div>\n        <Test/>\n      </div>\n\n  )\n}\n\n\n//最后需要 export 一下！\nexport default App\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyB;AAIzB;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;;;;AACA,SAASC,GAAT,GAAgB;EACd,oBACI;IAAA,uBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD,C,CAGD;;;KAVSA,G;AAWT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}