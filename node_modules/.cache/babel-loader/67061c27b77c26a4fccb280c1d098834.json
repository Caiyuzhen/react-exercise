{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from 'react'; //1.从 react 中导入 useState,useEffect 函数\n\nimport { useState } from 'react'; // Hook:// - useWindowScroll\n//What?\n//获取滚动距离 Y\n//How?\n//const [y] = useWindowScroll()\n//🚀 Hook - useLocalStorage\n//What?\n//1.可以通过函数的参数，自定义传入 useState 的默认值\n//2.每次只要修改 message 数据的时候，都会自动的向本地同步一份\n//How?\n//const [message,setMessage] = useLocalStorage(defaultValue)\n//——————————————————————————————————————————————————————————————————\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowScroll() {\n  _s();\n\n  const [y, setY] = useState(0); //在滚动行为发生的时候，不断的获取滚动值，并交给 y\n\n  window.addEventListener('scroll', () => {\n    //监控滚动的【距离】\n    const deltaY = document.documentElement.scrollTop;\n    setY(deltaY); //把【距离】赋值给 y，直接传参就可以了🔥\n  });\n  return [y];\n}\n\n_s(useWindowScroll, \"oAzlpJV9o5yRDae78Tj3cKiAnUI=\");\n\nfunction APP() {\n  _s2();\n\n  const [y] = useWindowScroll();\n  console.log(y);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '12000px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6EDA\\u52A8\\u8DDD\\u79BB\\uFF1A\", y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(APP, \"5WT76XGhOvDXLFcvgX86nlRkm3A=\", false, function () {\n  return [useWindowScroll];\n});\n\n_c = APP;\n\n/*#__PURE__*/\n_jsxDEV(\"input\", {\n  type: \"text\",\n  value: this.state.message,\n  style: {\n    color: '#3370FF',\n    fontSize: '0.85rem',\n    padding: '1rem',\n    borderRadius: '1rem',\n    width: '10rem',\n    margin: '10rem'\n  },\n  onFocus: this.inputFocusFn,\n  onChange: this.inputChangeFn\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 1\n}, this); // function useLocalStorage (defaultValue){\n//   const [message,setMessage] = useState(defaultValue)//1.可以通过函数的参数，自定义传入 useState 的默认值\n//   useEffect(()=>{\n//     //每次只要修改 message 数据的时候，都会自动的向本地同步一份\n//     window.localStorage.setItem('message',message)\n//   },[message])\n//   return [message,setMessage]\n// }\n// //最后需要 export 一下！\n// export default useLocalStorage\n\n\nexport default APP;\n\nvar _c;\n\n$RefreshReg$(_c, \"APP\");","map":{"version":3,"names":["React","useState","useWindowScroll","y","setY","window","addEventListener","deltaY","document","documentElement","scrollTop","APP","console","log","height","state","message","color","fontSize","padding","borderRadius","width","margin","inputFocusFn","inputChangeFn"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from 'react'\n//1.从 react 中导入 useState,useEffect 函数\nimport { useState } from 'react'\n\n\n// Hook:// - useWindowScroll\n\n//What?\n//获取滚动距离 Y\n\n//How?\n//const [y] = useWindowScroll()\n\n\n//🚀 Hook - useLocalStorage\n\n//What?\n//1.可以通过函数的参数，自定义传入 useState 的默认值\n//2.每次只要修改 message 数据的时候，都会自动的向本地同步一份\n\n//How?\n//const [message,setMessage] = useLocalStorage(defaultValue)\n\n\n\n\n\n\n//——————————————————————————————————————————————————————————————————\n\n\n\nfunction useWindowScroll () {\n\n  const [y, setY] = useState(0)\n\n  //在滚动行为发生的时候，不断的获取滚动值，并交给 y\n  window.addEventListener('scroll', () => {\n    //监控滚动的【距离】\n    const deltaY = document.documentElement.scrollTop\n    setY(deltaY) //把【距离】赋值给 y，直接传参就可以了🔥\n  })\n\n  return [y]\n}\n\n\nfunction APP () {\n  const [y] = useWindowScroll()\n  console.log(y)\n  return (\n    <div \n      style={{ height: '12000px' }}>\n        <p>\n          滚动距离：{y}\n        </p>\n    </div>\n  )\n}\n\n\n\n<input \ntype=\"text\" \nvalue={this.state.message}\nstyle={{color: '#3370FF',fontSize: '0.85rem',padding: '1rem',borderRadius: '1rem',width:'10rem',margin: '10rem'}}\nonFocus={this.inputFocusFn}\nonChange={this.inputChangeFn}\n/>\n\n\n// function useLocalStorage (defaultValue){\n\n//   const [message,setMessage] = useState(defaultValue)//1.可以通过函数的参数，自定义传入 useState 的默认值\n\n\n//   useEffect(()=>{\n//     //每次只要修改 message 数据的时候，都会自动的向本地同步一份\n//     window.localStorage.setItem('message',message)\n\n//   },[message])\n\n//   return [message,setMessage]\n// }\n\n\n\n\n// //最后需要 export 一下！\n// export default useLocalStorage\n\n\nexport default APP\n\n\n"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAGA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAOA;;;;AAIA,SAASC,eAAT,GAA4B;EAAA;;EAE1B,MAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYH,QAAQ,CAAC,CAAD,CAA1B,CAF0B,CAI1B;;EACAI,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;IACtC;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAAxC;IACAN,IAAI,CAACG,MAAD,CAAJ,CAHsC,CAGzB;EACd,CAJD;EAMA,OAAO,CAACJ,CAAD,CAAP;AACD;;GAZQD,e;;AAeT,SAASS,GAAT,GAAgB;EAAA;;EACd,MAAM,CAACR,CAAD,IAAMD,eAAe,EAA3B;EACAU,OAAO,CAACC,GAAR,CAAYV,CAAZ;EACA,oBACE;IACE,KAAK,EAAE;MAAEW,MAAM,EAAE;IAAV,CADT;IAAA,uBAEI;MAAA,6CACQX,CADR;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;IAXQQ,G;UACKT,e;;;KADLS,G;;AAeT;AAAA;EACA,IAAI,EAAC,MADL;EAEA,KAAK,EAAE,KAAKI,KAAL,CAAWC,OAFlB;EAGA,KAAK,EAAE;IAACC,KAAK,EAAE,SAAR;IAAkBC,QAAQ,EAAE,SAA5B;IAAsCC,OAAO,EAAE,MAA/C;IAAsDC,YAAY,EAAE,MAApE;IAA2EC,KAAK,EAAC,OAAjF;IAAyFC,MAAM,EAAE;EAAjG,CAHP;EAIA,OAAO,EAAE,KAAKC,YAJd;EAKA,QAAQ,EAAE,KAAKC;AALf;EAAA;EAAA;EAAA;AAAA,S,CASA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;;;AAGA,eAAeb,GAAf"},"metadata":{},"sourceType":"module"}