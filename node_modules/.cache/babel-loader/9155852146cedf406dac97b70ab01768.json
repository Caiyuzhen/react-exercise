{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React, { useState } from 'react'; //创建一个列表，支持删除\n//思路，先完成基础的渲染，再抽离成组件\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n//渲染 List 列表\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListItem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} //提供数据\n\n\n_c = ListItem;\n\nclass Data extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list: [{\n        id: 1,\n        name: '🍔汉堡包',\n        price: 18.9,\n        info: '来自奥地利的牛肉堡'\n      }, {\n        id: 2,\n        name: '🍗烤鸡腿',\n        price: 6.6,\n        info: '来新奥尔良的鸡腿堡'\n      }, {\n        id: 3,\n        name: '🍥鸡肉卷',\n        price: 12.2,\n        info: '来自纽约的鸡肉卷'\n      }]\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // 👇👇👇需要渲染的列表模板(用 map 方法来遍历)\n      _jsxDEV(\"div\", {\n        children: this.state.list.map(item =>\n        /*#__PURE__*/\n        //3.最后把下面这部分抽离成组件，然后放到上边的 function 中去\n        _jsxDEV(_Fragment, {}, void 0, false) //————————————————————————————————————————————————————\n        //2.然后替换模板列表里边的数据👇\n        // <>\n        //   <h3>{item.name}</h3>\n        //   <p>{item.price}</p>\n        //   <p>{item.info}</p>\n        //   <button>删除</button>\n        //   <br />\n        //   <br />\n        //   <hr />\n        // </>\n        //————————————————————————————————————————————————————\n        //1.先写一个模板列表👇\n        // <>\n        //   <h3>标题</h3>\n        //   <p>价格</p>\n        //   <p>说明</p>\n        //   <button>删除</button>\n        //   <br />\n        //   <br />\n        //   <hr />\n        // </>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\n; // //——————————————————————\n// //最后需要 export 一下！\n\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","useState","ListItem","Data","Component","state","list","id","name","price","info","render","map","item"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React, { useState } from 'react' \n\n//创建一个列表，支持删除\n//思路，先完成基础的渲染，再抽离成组件\n\n\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n\n\n//渲染 List 列表\nfunction ListItem ( ){\n  return (\n    <div></div>\n  )\n}\n\n\n\n\n\n\n//提供数据\nclass Data extends React.Component {\n  state = {\n    list:[\n      { id:1, name: '🍔汉堡包', price:18.9, info:'来自奥地利的牛肉堡'},\n      { id:2, name: '🍗烤鸡腿', price:6.6, info:'来新奥尔良的鸡腿堡'},\n      { id:3, name: '🍥鸡肉卷', price:12.2, info:'来自纽约的鸡肉卷'},\n    ]\n  }\n  render() {\n    return (\n      // 👇👇👇需要渲染的列表模板(用 map 方法来遍历)\n      <div>\n        {this.state.list.map(item =>(\n          //3.最后把下面这部分抽离成组件，然后放到上边的 function 中去\n          <>\n            \n          </>\n\n//————————————————————————————————————————————————————\n\n          //2.然后替换模板列表里边的数据👇\n            // <>\n            //   <h3>{item.name}</h3>\n              //   <p>{item.price}</p>\n              //   <p>{item.info}</p>\n            //   <button>删除</button>\n            //   <br />\n            //   <br />\n            //   <hr />\n            // </>\n\n//————————————————————————————————————————————————————\n\n            //1.先写一个模板列表👇\n            // <>\n            //   <h3>标题</h3>\n              //   <p>价格</p>\n              //   <p>说明</p>\n            //   <button>删除</button>\n            //   <br />\n            //   <br />\n            //   <hr />\n            // </>\n          ))}\n      </div>\n    )\n  }\n\n};\n\n// //——————————————————————\n\n\n// //最后需要 export 一下！\nexport default Data\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AAGA;AAIA;;;;;AACA,SAASC,QAAT,GAAqB;EACnB,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,C,CAOD;;;KAXSA,Q;;AAYT,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,KADiC,GACzB;MACNC,IAAI,EAAC,CACH;QAAEC,EAAE,EAAC,CAAL;QAAQC,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,IAA7B;QAAmCC,IAAI,EAAC;MAAxC,CADG,EAEH;QAAEH,EAAE,EAAC,CAAL;QAAQC,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,GAA7B;QAAkCC,IAAI,EAAC;MAAvC,CAFG,EAGH;QAAEH,EAAE,EAAC,CAAL;QAAQC,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,IAA7B;QAAmCC,IAAI,EAAC;MAAxC,CAHG;IADC,CADyB;EAAA;;EAQjCC,MAAM,GAAG;IACP;MAAA;MACE;MACA;QAAA,UACG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,IAAI;QAAA;QACvB;QACA,qCAFuB,CAMjC;QAEU;QACE;QACA;QACE;QACA;QACF;QACA;QACA;QACA;QACA;QAEZ;QAEY;QACA;QACA;QACE;QACA;QACF;QACA;QACA;QACA;QACA;QA9BH;MADH;QAAA;QAAA;QAAA;MAAA;IAFF;EAqCD;;AA9CgC;;AAgDlC,C,CAED;AAGA;;AACA,eAAeV,IAAf"},"metadata":{},"sourceType":"module"}