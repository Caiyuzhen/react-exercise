{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\"; //引入 react 包\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 4,\n      list: [1, 2, 3],\n      person: {\n        name: 'jack',\n        age: 18\n      }\n    };\n\n    this.clickChange = () => {\n      //二、思路，写一个新的数组\n      //计数器 +1\n      this.setState({\n        count: this.state.count + 1\n      }); //给数组内[增加]数字\n\n      this.setState({\n        list: [...this.state.list, this.state.count] //后面的那个 this.state.count 为要增加的数字！\n\n      }); //给数组内[删除]数字\n\n      this.setState({\n        list: this.state.list.filter(item => item !== 2) //过滤出除了 2 之外的数字来组成新的数组\n\n      }); //修改 person 数据\n\n      this.setState({\n        person: { //注意！！\n          ...this.state.person,\n          name: 'Jimmy'\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", item, \" \"]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.count, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.clickChange,\n          children: \" \\u70B9\\u51FB\\u589E\\u52A0 + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n} //渲染类组件(根组件)\n\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n} //最后需要 export 一下！\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Test","Component","state","count","list","person","name","age","clickChange","setState","filter","item","render","map","App"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\"//引入 react 包\n\n\n\nclass Test extends React.Component {\n  state = {\n    count : 4,\n    list: [1,2,3],\n    person: {\n       name:'jack',\n       age:18\n    }\n  }\n\n  //🌟🌟修改数据\n  clickChange = () => {\n    //二、思路，写一个新的数组\n\n    //计数器 +1\n    this.setState({ \n      count: this.state.count + 1,\n    })\n\n    //给数组内[增加]数字\n    this.setState({\n        list: [...this.state.list,this.state.count] //后面的那个 this.state.count 为要增加的数字！\n    })\n\n    //给数组内[删除]数字\n    this.setState({\n        list: this.state.list.filter(item => item !== 2) //过滤出除了 2 之外的数字来组成新的数组\n    })\n\n    //修改 person 数据\n    this.setState({\n      person: { //注意！！\n        ...this.state.person,\n        name:'Jimmy'\n      }\n    })\n  }\n\n\n  render() {\n      return(\n        <>\n          {/* 一、先遍历数组,然后渲染到列表中, 记得加 key ！🌟 循环谁就给谁加！！*/}\n          <ul>\n            {this.state.list.map((item) => <li  key= {item}> {item} </li> )}\n          </ul>\n\n        <div>\n          {this.state.person.name}\n        </div>\n\n          <div>\n            {this.state.count} <button onClick={this.clickChange}> 点击增加 + </button>\n          </div>\n        </>\n      )\n  }\n}\n\n\n//渲染类组件(根组件)\nfunction App () {\n  return (\n      <div>\n        <Test/>\n      </div>\n\n  )\n}\n\n\n//最后需要 export 一下！\nexport default App\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyB;;;;;AAIzB,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,KADiC,GACzB;MACNC,KAAK,EAAG,CADF;MAENC,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFA;MAGNC,MAAM,EAAE;QACLC,IAAI,EAAC,MADA;QAELC,GAAG,EAAC;MAFC;IAHF,CADyB;;IAAA,KAWjCC,WAXiC,GAWnB,MAAM;MAClB;MAEA;MACA,KAAKC,QAAL,CAAc;QACZN,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;MADd,CAAd,EAJkB,CAQlB;;MACA,KAAKM,QAAL,CAAc;QACVL,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAoB,KAAKF,KAAL,CAAWC,KAA/B,CADI,CACkC;;MADlC,CAAd,EATkB,CAalB;;MACA,KAAKM,QAAL,CAAc;QACVL,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,KAAK,CAAxC,CADI,CACuC;;MADvC,CAAd,EAdkB,CAkBlB;;MACA,KAAKF,QAAL,CAAc;QACZJ,MAAM,EAAE,EAAE;UACR,GAAG,KAAKH,KAAL,CAAWG,MADR;UAENC,IAAI,EAAC;QAFC;MADI,CAAd;IAMD,CApCgC;EAAA;;EAuCjCM,MAAM,GAAG;IACL,oBACE;MAAA,wBAEE;QAAA,UACG,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,GAAhB,CAAqBF,IAAD,iBAAU;UAAA,gBAAmBA,IAAnB;QAAA,GAAWA,IAAX;UAAA;UAAA;UAAA;QAAA,QAA9B;MADH;QAAA;QAAA;QAAA;MAAA,QAFF,eAMA;QAAA,UACG,KAAKT,KAAL,CAAWG,MAAX,CAAkBC;MADrB;QAAA;QAAA;QAAA;MAAA,QANA,eAUE;QAAA,WACG,KAAKJ,KAAL,CAAWC,KADd,oBACqB;UAAQ,OAAO,EAAE,KAAKK,WAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADrB;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA,gBADF;EAgBH;;AAxDgC,C,CA4DnC;;;AACA,SAASM,GAAT,GAAgB;EACd,oBACI;IAAA,uBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD,C,CAGD;;;KAVSA,G;AAWT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}