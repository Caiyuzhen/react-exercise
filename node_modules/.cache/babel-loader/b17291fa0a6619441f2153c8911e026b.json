{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\"; //引入 react 包\n//React 的状态不可变\n//👇错误的写法\n// eslint-disable-next-line no-lone-blocks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* < >\n  state = {\n   count : 0,\n   list: [1,2,3],\n   person: {\n      name:'jack',\n      age:18\n   }\n  }\n  直接修改简单类型Number (❌错误)\n  this.state.count++\n  ++this.state.count\n  this.state.count += 1\n  this.state.count = 1\n  this.setState({ count: this.state.count +1 })(✅正确)\n  \n  直接修改数组 (❌错误)\n  this.state.list.push(123)\n  this.state.list.spice(1,1)\n  this.setState({ list: [...this.state.list],4 })(✅正确)\n  \n  // 直接修改对象 (❌错误)\n  this.state.person.name = 'rose'\n  this.setState({\n   person:{\n     ...this.state.person (✅正确)\n   }\n  })\n  < / > */\n}\n\nclass Test extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      list: [1, 2, 3],\n      person: {\n        name: 'jack',\n        age: 18\n      }\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //一、先遍历数组\n      _jsxDEV(\"ul\", {\n        children: this.state.list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", item, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n} //渲染类组件(根组件)\n\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n} //最后需要 export 一下！\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Test","Component","state","count","list","person","name","age","render","map","item","App"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\"//引入 react 包\n\n\n//React 的状态不可变\n//👇错误的写法\n// eslint-disable-next-line no-lone-blocks\n{/* < >\n\nstate = {\n  count : 0,\n  list: [1,2,3],\n  person: {\n     name:'jack',\n     age:18\n  }\n}\n\n直接修改简单类型Number (❌错误)\nthis.state.count++\n++this.state.count\nthis.state.count += 1\nthis.state.count = 1\n\nthis.setState({ count: this.state.count +1 })(✅正确)\n\n\n直接修改数组 (❌错误)\nthis.state.list.push(123)\nthis.state.list.spice(1,1)\n\nthis.setState({ list: [...this.state.list],4 })(✅正确)\n\n\n// 直接修改对象 (❌错误)\nthis.state.person.name = 'rose'\n\nthis.setState({\n  person:{\n    ...this.state.person (✅正确)\n  }\n})\n\n< / > */}\n\nclass Test extends React.Component {\n  state = {\n    count : 0,\n    list: [1,2,3],\n    person: {\n       name:'jack',\n       age:18\n    }\n  }\n\n  render() {\n      return(\n        //一、先遍历数组\n        <ul>\n          {this.state.list.map((item) => <li> {item} </li> )}\n        </ul>\n      )\n  }\n}\n\n\n//渲染类组件(根组件)\nfunction App () {\n  return (\n      <div>\n        <Test/>\n      </div>\n\n  )\n}\n\n\n//最后需要 export 一下！\nexport default App\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyB;AAGzB;AACA;AACA;;;AACA;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQS;;AAET,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,KADiC,GACzB;MACNC,KAAK,EAAG,CADF;MAENC,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFA;MAGNC,MAAM,EAAE;QACLC,IAAI,EAAC,MADA;QAELC,GAAG,EAAC;MAFC;IAHF,CADyB;EAAA;;EAUjCC,MAAM,GAAG;IACL;MAAA;MACE;MACA;QAAA,UACG,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,GAAhB,CAAqBC,IAAD,iBAAU;UAAA,gBAAMA,IAAN;QAAA;UAAA;UAAA;UAAA;QAAA,QAA9B;MADH;QAAA;QAAA;QAAA;MAAA;IAFF;EAMH;;AAjBgC,C,CAqBnC;;;AACA,SAASC,GAAT,GAAgB;EACd,oBACI;IAAA,uBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD,C,CAGD;;;KAVSA,G;AAWT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}