{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React from 'react'; //🚀 组件的生命周期(🌟只有类组件才有生命周期,在实例化的时候才会出现生命周期)\n//🍎 WHAT?\n//【挂载阶段】\n//钩子函数顺序: \n//1.construction       （初始化数据,只执行一次，可以用来创建 Ref、使用 bind 结局 this 指向问题等） => \n//2.render             （渲染 UI, 每次组件执行都会触发, 注意不能在里边调用 setState() ！） => \n//3.componentDidMount   (组件挂载完毕后才会执行，可以用来发送网络请求，或者操作 DOM)\n//【更新时】\n//钩子函数顺序: \n//1.render              (渲染 UI,与挂载阶段是同一个 render)\n//2.componentDidUpdate （DOM 操作，可以获取到更新后的 DOM 内容，注意不能在里边调用 setState() ！）\n//【卸载时】\n//🍎 注意\n//construction、render 阶段不能发送 ajax 请求或者修改 DOM，否则会引发重复渲染；Commit 阶段才可以！\n//——————————————————————————————————————————————————————————————————\n//🍎 类组件生命周期\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    //1.【挂载阶段】先执行\n    super();\n    this.state = {\n      count: 0\n    };\n\n    this.clickCountAdd = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    //3.【挂载阶段】最后执行\n    console.log('componentDidMount'); //在这个阶段发送 ajax 请求 ...\n  }\n\n  componentDidUpdate() {\n    //4.【更新阶段】\n    console.log('componentDidUpdate');\n    const div = document.querySelector;\n  }\n\n  render() {\n    //2.【挂载阶段】再执行\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: [\"\\u589E\\u52A0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickCountAdd,\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n\n} // //最后需要 export 一下！\n\n\nexport default App;","map":{"version":3,"names":["React","App","Component","constructor","state","count","clickCountAdd","setState","console","log","componentDidMount","componentDidUpdate","div","document","querySelector","render"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from 'react' \n\n\n//🚀 组件的生命周期(🌟只有类组件才有生命周期,在实例化的时候才会出现生命周期)\n\n    //🍎 WHAT?\n      //【挂载阶段】\n          //钩子函数顺序: \n            //1.construction       （初始化数据,只执行一次，可以用来创建 Ref、使用 bind 结局 this 指向问题等） => \n            //2.render             （渲染 UI, 每次组件执行都会触发, 注意不能在里边调用 setState() ！） => \n            //3.componentDidMount   (组件挂载完毕后才会执行，可以用来发送网络请求，或者操作 DOM)\n\n      //【更新时】\n          //钩子函数顺序: \n            //1.render              (渲染 UI,与挂载阶段是同一个 render)\n            //2.componentDidUpdate （DOM 操作，可以获取到更新后的 DOM 内容，注意不能在里边调用 setState() ！）\n\n\n\n      //【卸载时】\n\n\n\n\n    //🍎 注意\n      //construction、render 阶段不能发送 ajax 请求或者修改 DOM，否则会引发重复渲染；Commit 阶段才可以！\n\n\n//——————————————————————————————————————————————————————————————————\n\n\n//🍎 类组件生命周期\nclass App extends React.Component {\n\n    state = {\n      count: 0\n    }\n\n\n    clickCountAdd = () =>{\n      this.setState({\n        count: this.state.count +1\n      })\n    }\n\n\n    constructor() { //1.【挂载阶段】先执行\n      super();\n      console.log('constructor');\n    }\n\n\n    componentDidMount() { //3.【挂载阶段】最后执行\n      console.log('componentDidMount'); \n      //在这个阶段发送 ajax 请求 ...\n    }\n\n\n    componentDidUpdate () { //4.【更新阶段】\n      console.log('componentDidUpdate'); \n      const div = document.querySelector\n    }\n\n\n    render() { //2.【挂载阶段】再执行\n      console.log('render')\n      return (\n        <div className=\"div\">\n          增加\n          <button onClick={this.clickCountAdd}>\n            {this.state.count}\n          </button>\n        </div>\n      )\n    }\n}\n\n\n\n// //最后需要 export 一下！\nexport default App\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AAEI;AACE;AACI;AACE;AACA;AACA;AAEN;AACI;AACE;AACA;AAIN;AAKF;AACE;AAGN;AAGA;;;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;EAc9BC,WAAW,GAAG;IAAE;IACd;IADY,KAZdC,KAYc,GAZN;MACNC,KAAK,EAAE;IADD,CAYM;;IAAA,KAPdC,aAOc,GAPE,MAAK;MACnB,KAAKC,QAAL,CAAc;QACZF,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAkB;MADb,CAAd;IAGD,CAGa;;IAEZG,OAAO,CAACC,GAAR,CAAY,aAAZ;EACD;;EAGDC,iBAAiB,GAAG;IAAE;IACpBF,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADkB,CAElB;EACD;;EAGDE,kBAAkB,GAAI;IAAE;IACtBH,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACA,MAAMG,GAAG,GAAGC,QAAQ,CAACC,aAArB;EACD;;EAGDC,MAAM,GAAG;IAAE;IACTP,OAAO,CAACC,GAAR,CAAY,QAAZ;IACA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wCAEE;QAAQ,OAAO,EAAE,KAAKH,aAAtB;QAAA,UACG,KAAKF,KAAL,CAAWC;MADd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AA1C6B,C,CA+ClC;;;AACA,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}