{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from 'react'; //1.从 react 中导入 useState 函数\n\nimport { useState } from 'react'; //🚀 Hooks - useEffect\n//WHat？ \n//比如函数内会修改全局的变量, 实际例子:\n//1.发送 ajax 请求\n//2.手动修改 DOM\n//3.localStorage 操作(本地存储)\n//How?\n//使用步骤 🌟\n//1.从 react 中导入 useState 函数\n//2.执行 useState 函数并传入初始值（初始值必须在函数组件中）\n//3.从函数的执行结果中解构出 【数据状态值，修改数据的方法】\n//4.使用数据、修改数据\n//——————————————————————————————————————————————————————————————————\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //👇相当于从【setState的数组中】解构出【数字、方法】\n  const [count, setCount] = useState(0); //2.执行 useState 函数并传入初始值（初始值必须在函数组件中）  3.从函数的执行结果中解构出 [数据，修改数据的方法]\n\n  const [flag, setFlag] = useState(true);\n  const [list, setList] = useState([]);\n\n  function changeManyState() {\n    setFlag(false);\n    setList([1, 2, 3]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: [\" \\u70B9\\u51FB + \", count, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"flag:\", flag ? '1' : '0', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \"list:\", list.join('-')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeManyState,\n      children: \" \\u70B9\\u51FB\\u89E6\\u53D1\\u4FEE\\u6539\\u591A\\u4E2A state \\u7684\\u51FD\\u6570 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n} // //最后需要 export 一下！\n\n\n_s(App, \"Gs1mY/+/wATxOQcfnlzNoLkfRhE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","count","setCount","flag","setFlag","list","setList","changeManyState","join"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from 'react' \n//1.从 react 中导入 useState 函数\nimport {useState} from 'react'\n\n\n//🚀 Hooks - useEffect\n    //WHat？ \n      //比如函数内会修改全局的变量, 实际例子:\n        //1.发送 ajax 请求\n        //2.手动修改 DOM\n        //3.localStorage 操作(本地存储)\n    \n        \n    //How?\n      //使用步骤 🌟\n        //1.从 react 中导入 useState 函数\n        //2.执行 useState 函数并传入初始值（初始值必须在函数组件中）\n        //3.从函数的执行结果中解构出 【数据状态值，修改数据的方法】\n        //4.使用数据、修改数据\n\n\n\n\n//——————————————————————————————————————————————————————————————————\n\n\n\n\nfunction App() {\n  //👇相当于从【setState的数组中】解构出【数字、方法】\n  const [count,setCount] = useState(0)//2.执行 useState 函数并传入初始值（初始值必须在函数组件中）  3.从函数的执行结果中解构出 [数据，修改数据的方法]\n  const [flag,setFlag] = useState(true)\n  const [list,setList] = useState([])\n\n  function changeManyState(){\n    setFlag(false)\n    setList([1,2,3])\n  }\n\n  return(\n    <div>\n      {/* jsx 内不能写为 ++ */}\n      <button onClick = {() => setCount(count+1)}> 点击 + {count}  </button>\n          <br />\n          <br />\n        <div>\n          flag:{flag ? '1' : '0'} \n          <br />\n          list:{list.join('-')} \n        </div>\n      <button onClick = {changeManyState}> 点击触发修改多个 state 的函数 </button>\n    </div>\n  )\n}\n\n\n\n\n// //最后需要 export 一下！\nexport default App\n\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB,C,CAGA;AACI;AACE;AACE;AACA;AACA;AAGJ;AACE;AACE;AACA;AACA;AACA;AAKR;;;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,CAAD,CAAjC,CAFa,CAEuB;;EACpC,MAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,IAAD,CAA/B;EACA,MAAM,CAACM,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;;EAEA,SAASQ,eAAT,GAA0B;IACxBH,OAAO,CAAC,KAAD,CAAP;IACAE,OAAO,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,CAAP;EACD;;EAED,oBACE;IAAA,wBAEE;MAAQ,OAAO,EAAI,MAAMJ,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAjC;MAAA,+BAAmDA,KAAnD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGM;MAAA;MAAA;MAAA;IAAA,QAHN,eAIM;MAAA;MAAA;MAAA;IAAA,QAJN,eAKI;MAAA,oBACQE,IAAI,GAAG,GAAH,GAAS,GADrB,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,WAGQE,IAAI,CAACG,IAAL,CAAU,GAAV,CAHR;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAUE;MAAQ,OAAO,EAAID,eAAnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,C,CAKD;;;GA9BSP,G;;KAAAA,G;AA+BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}