{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise-1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import logo from './logo.svg';\n// import './App.css';\n//基础表达式一：常规的变量\nconst name = '饭团'; //基础表达式二：常规方法\n\nconst getAge = () => {\n  return 18 + '岁';\n}; //基础表达式三：用于三元运算符\n\n\nconst flag = true; //列表渲染 - 原生的  map 方法\n//用 map 方法来遍历song\n\n{\n  songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: song.name\n  }, song.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 18\n  }, this));\n} //遍历列表时需要一个类型为 number/string 的不可重复的 key\n\nconst songs = [{\n  id: 1,\n  name: '歌曲A'\n}, {\n  id: 2,\n  name: '歌曲B'\n}, {\n  id: 3,\n  name: '歌曲C'\n}];\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [name, getAge(), flag ? '真棒' : '很菜', /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: song.name\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["name","getAge","flag","songs","map","song","id","App"],"sources":["/Users/zen/Desktop/react-exercise-1/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n\n//基础表达式一：常规的变量\nconst name = '饭团'\n\n//基础表达式二：常规方法\nconst getAge = () =>{\n  return 18 + '岁'\n}\n\n//基础表达式三：用于三元运算符\nconst flag = true\n\n\n\n//列表渲染 - 原生的  map 方法\n//用 map 方法来遍历song\n{songs.map(song=><li key={song.id}>{song.name}</li>)} \n\n//遍历列表时需要一个类型为 number/string 的不可重复的 key\nconst songs = [\n  { id: 1, name: '歌曲A'},\n  { id: 2, name: '歌曲B'},\n  { id: 3, name: '歌曲C'},\n]\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      {/* 下面都是在渲染变量或者函数的返回值 */}\n      { name }\n      { getAge() }\n      { flag ? '真棒':'很菜' }\n      \n      <ul>\n        {/* 👇拿到歌曲列表, map(x=>x.y) 用 map 方法来遍历, 遍历列表时需要一个类型为 number/string 的不可重复的 key, song 可以自定义，=> 箭头后面为要渲染出来的节点*/}\n        {songs.map(song=><li key={song.id}>{song.name}</li>)} \n      \n      </ul>\n\n      \n\n      \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AAGA;AACA,MAAMA,IAAI,GAAG,IAAb,C,CAEA;;AACA,MAAMC,MAAM,GAAG,MAAK;EAClB,OAAO,KAAK,GAAZ;AACD,CAFD,C,CAIA;;;AACA,MAAMC,IAAI,GAAG,IAAb,C,CAIA;AACA;;AACA;EAACC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAE;IAAA,UAAmBA,IAAI,CAACL;EAAxB,GAASK,IAAI,CAACC,EAAd;IAAA;IAAA;IAAA;EAAA,QAAhB;AAAoD,C,CAErD;;AACA,MAAMH,KAAK,GAAG,CACZ;EAAEG,EAAE,EAAE,CAAN;EAASN,IAAI,EAAE;AAAf,CADY,EAEZ;EAAEM,EAAE,EAAE,CAAN;EAASN,IAAI,EAAE;AAAf,CAFY,EAGZ;EAAEM,EAAE,EAAE,CAAN;EAASN,IAAI,EAAE;AAAf,CAHY,CAAd;;AASA,SAASO,GAAT,GAAe;EACb,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WAGIP,IAHJ,EAIIC,MAAM,EAJV,EAKIC,IAAI,GAAG,IAAH,GAAQ,IALhB,eAOE;MAAA,UAEGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAE;QAAA,UAAmBA,IAAI,CAACL;MAAxB,GAASK,IAAI,CAACC,EAAd;QAAA;QAAA;QAAA;MAAA,QAAhB;IAFH;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;KArBQC,G;AAuBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}