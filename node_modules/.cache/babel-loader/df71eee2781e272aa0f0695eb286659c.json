{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/react-exercise/src/App.js\";\nimport \"./App.css\";\nimport React, { useState } from 'react'; //创建一个列表，支持删除\n//思路，先完成基础的渲染，再抽离成组件\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n//渲染 List 列表\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListItem(_ref) {\n  let {\n    item\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    //4.把渲染模板抽离成组件【挪进来】，再【接收父组件的数据】并进行【解构数据】\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u5220\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), \"//   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n} //提供数据\n\n\n_c = ListItem;\n\nclass Data extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list: [{\n        id: 1,\n        name: '🍔汉堡包',\n        price: 18.9,\n        info: '来自奥地利的牛肉堡'\n      }, {\n        id: 2,\n        name: '🍗烤鸡腿',\n        price: 6.6,\n        info: '来新奥尔良的鸡腿堡'\n      }, {\n        id: 3,\n        name: '🍥鸡肉卷',\n        price: 12.2,\n        info: '来自纽约的鸡肉卷'\n      }]\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // 👇👇👇需要渲染的列表模板(用 map 方法来遍历)\n      _jsxDEV(\"div\", {\n        children: this.state.list.map(item =>\n        /*#__PURE__*/\n        //3.最后把下面这部分抽离成组件，然后放到上边的 function 中去， 再把【List】的【数据】遍历成 【item】，传给子组件\n        _jsxDEV(ListItem, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this) //————————————————————————————————————————————————————\n        //2.然后替换模板列表里边的数据👇\n        // <>\n        //   <h3>{item.name}</h3>\n        //   <p>{item.price}</p>\n        //   <p>{item.info}</p>\n        //   <button>删除</button>\n        //   <br />\n        //   <br />\n        //   <hr />\n        // </>\n        //————————————————————————————————————————————————————\n        //1.先写一个模板列表👇\n        // <>\n        //   <h3>标题</h3>\n        //   <p>价格</p>\n        //   <p>说明</p>\n        //   <button>删除</button>\n        //   <br />\n        //   <br />\n        //   <hr />\n        // </>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\n; // //——————————————————————\n// //最后需要 export 一下！\n\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","useState","ListItem","item","name","price","info","Data","Component","state","list","id","render","map"],"sources":["/Users/zen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React, { useState } from 'react' \n\n//创建一个列表，支持删除\n//思路，先完成基础的渲染，再抽离成组件\n\n\n//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\n\n\n\n//渲染 List 列表\nfunction ListItem ({ item }){\n  return (\n    //4.把渲染模板抽离成组件【挪进来】，再【接收父组件的数据】并进行【解构数据】\n    <>\n      <h3>{item.name}</h3>\n        <p>{item.price}</p>\n        <p>{item.info}</p>\n      <button>删除</button>\n      <br />\n            //   <br />\n      <hr />\n    </>\n  )\n}\n\n\n\n\n\n\n//提供数据\nclass Data extends React.Component {\n  state = {\n    list:[\n      { id:1, name: '🍔汉堡包', price:18.9, info:'来自奥地利的牛肉堡'},\n      { id:2, name: '🍗烤鸡腿', price:6.6, info:'来新奥尔良的鸡腿堡'},\n      { id:3, name: '🍥鸡肉卷', price:12.2, info:'来自纽约的鸡肉卷'},\n    ]\n  }\n  render() {\n    return (\n      // 👇👇👇需要渲染的列表模板(用 map 方法来遍历)\n      <div>\n        {this.state.list.map(item =>(\n          //3.最后把下面这部分抽离成组件，然后放到上边的 function 中去， 再把【List】的【数据】遍历成 【item】，传给子组件\n          <ListItem \n            key={item.id}\n            item={item}\n          />\n\n//————————————————————————————————————————————————————\n\n          //2.然后替换模板列表里边的数据👇\n            // <>\n            //   <h3>{item.name}</h3>\n              //   <p>{item.price}</p>\n              //   <p>{item.info}</p>\n            //   <button>删除</button>\n            //   <br />\n            //   <br />\n            //   <hr />\n            // </>\n\n//————————————————————————————————————————————————————\n\n            //1.先写一个模板列表👇\n            // <>\n            //   <h3>标题</h3>\n              //   <p>价格</p>\n              //   <p>说明</p>\n            //   <button>删除</button>\n            //   <br />\n            //   <br />\n            //   <hr />\n            // </>\n          ))}\n      </div>\n    )\n  }\n\n};\n\n// //——————————————————————\n\n\n// //最后需要 export 一下！\nexport default Data\n\n\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AAGA;AAIA;;;;;AACA,SAASC,QAAT,OAA4B;EAAA,IAAT;IAAEC;EAAF,CAAS;EAC1B;IAAA;IACE;IACA;MAAA,wBACE;QAAA,UAAKA,IAAI,CAACC;MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAEI;QAAA,UAAID,IAAI,CAACE;MAAT;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAIF,IAAI,CAACG;MAAT;QAAA;QAAA;QAAA;MAAA,QAHJ,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;QAAA;QAAA;MAAA,QALF,wBAMa;QAAA;QAAA;QAAA;MAAA,QANb,eAOE;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;EAFF;AAYD,C,CAOD;;;KApBSJ,Q;;AAqBT,MAAMK,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,KADiC,GACzB;MACNC,IAAI,EAAC,CACH;QAAEC,EAAE,EAAC,CAAL;QAAQP,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,IAA7B;QAAmCC,IAAI,EAAC;MAAxC,CADG,EAEH;QAAEK,EAAE,EAAC,CAAL;QAAQP,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,GAA7B;QAAkCC,IAAI,EAAC;MAAvC,CAFG,EAGH;QAAEK,EAAE,EAAC,CAAL;QAAQP,IAAI,EAAE,OAAd;QAAuBC,KAAK,EAAC,IAA7B;QAAmCC,IAAI,EAAC;MAAxC,CAHG;IADC,CADyB;EAAA;;EAQjCM,MAAM,GAAG;IACP;MAAA;MACE;MACA;QAAA,UACG,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,GAAhB,CAAoBV,IAAI;QAAA;QACvB;QACA,QAAC,QAAD;UAEE,IAAI,EAAEA;QAFR,GACOA,IAAI,CAACQ,EADZ;UAAA;UAAA;UAAA;QAAA,QAFuB,CAOjC;QAEU;QACE;QACA;QACE;QACA;QACF;QACA;QACA;QACA;QACA;QAEZ;QAEY;QACA;QACA;QACE;QACA;QACF;QACA;QACA;QACA;QACA;QA/BH;MADH;QAAA;QAAA;QAAA;MAAA;IAFF;EAsCD;;AA/CgC;;AAiDlC,C,CAED;AAGA;;AACA,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}