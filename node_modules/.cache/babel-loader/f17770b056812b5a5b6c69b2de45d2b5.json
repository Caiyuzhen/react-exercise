{"ast":null,"code":"var _jsxFileName = \"/Users/Youzen/Desktop/react-exercise/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"./App.css\";\nimport React from 'react'; //1.导入 useRef 函数\n\nimport { createContext, useState, useContext } from 'react'; //🚀 Hook - useContext\n//What?\n//函数组件之间的【数据通讯】\n//How?\n// 1.在爷爷组件内定义变量调用 createContext() 并解构赋值: const Context = createContext()\n// 2.在爷爷组件内【包裹】数据 <Context.Provider value={🍎}> ... </Context.Provider>\n// 3.在儿子组件内调用 useContext(Context)， 获取 Context 内容\n// 4.可以在爷爷组件内使用 useState() 方法去修改调用了爷爷组件的数据的儿子\n//1.解构赋值给 Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\n\nfunction APP() {\n  _s();\n\n  const [count, setCount] = useState(0); //APP 内的数据\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: count,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ComA, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n        },\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(APP, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = APP;\n\nfunction ComA() {\n  _s2();\n\n  const count = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u4ECE APP \\u4F20\\u8FC7\\u6765\\u7684\\u6570\\u636E\\uD83D\\uDC49: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComB, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ComA, \"LM0urz63dHRfS0WL4f5FKeK5GNg=\");\n\n_c2 = ComA;\n\nfunction ComB() {\n  _s3();\n\n  const count = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u4ECE APP \\u6765\\u7684\\uD83D\\uDC49: \", count, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} // 最后需要 export 一下！\n\n\n_s3(ComB, \"LM0urz63dHRfS0WL4f5FKeK5GNg=\");\n\n_c3 = ComB;\nexport default APP;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"APP\");\n$RefreshReg$(_c2, \"ComA\");\n$RefreshReg$(_c3, \"ComB\");","map":{"version":3,"names":["React","createContext","useState","useContext","Context","APP","count","setCount","ComA","ComB"],"sources":["/Users/Youzen/Desktop/react-exercise/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from 'react'\n//1.导入 useRef 函数\nimport { createContext,useState,useContext } from 'react'\n\n\n//🚀 Hook - useContext\n    //What?\n      //函数组件之间的【数据通讯】\n    \n    //How?\n    // 1.在爷爷组件内定义变量调用 createContext() 并解构赋值: const Context = createContext()\n    // 2.在爷爷组件内【包裹】数据 <Context.Provider value={🍎}> ... </Context.Provider>\n    // 3.在儿子组件内调用 useContext(Context)， 获取 Context 内容\n    // 4.可以在爷爷组件内使用 useState() 方法去修改调用了爷爷组件的数据的儿子\n    \n\n\n//1.解构赋值给 Context\nconst Context = createContext()\n\n\n\n\n\n\nfunction APP () {\n\n  const [count,setCount] = useState(0) //APP 内的数据\n  return(\n      <Context.Provider value={count}>\n        <div>\n            <ComA />\n            {/* 🔥🔥相当于爷爷组件去控制父组件跟子组件的信息！因为下面的数据都是调用 APP 的！ */}\n            <button onClick={()=> {setCount(count+1)} }> + </button>\n        </div>\n      </Context.Provider>\n  )\n}\n\n\n\n\nfunction ComA() {\n\n  const count = useContext(Context)\n  return(\n    <>\n      <div>从 APP 传过来的数据👉: {count} </div>\n      <br />\n      <ComB />\n    </>\n  )\n}\n\n\n\nfunction ComB() {\n\n  const count = useContext(Context)\n  return(\n    <div>从 APP 来的👉: {count} </div>\n  )\n}\n\n\n\n\n\n// 最后需要 export 一下！\nexport default APP\n\n\n\n"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,aAAT,EAAuBC,QAAvB,EAAgCC,UAAhC,QAAkD,OAAlD,C,CAGA;AACI;AACE;AAEF;AACA;AACA;AACA;AACA;AAIJ;;;;AACA,MAAMC,OAAO,gBAAGH,aAAa,EAA7B;;AAOA,SAASI,GAAT,GAAgB;EAAA;;EAEd,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,CAAD,CAAjC,CAFc,CAEuB;;EACrC,oBACI,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAEI,KAAzB;IAAA,uBACE;MAAA,wBACI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI;QAAQ,OAAO,EAAE,MAAK;UAACC,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;QAAkB,CAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AASD;;GAZQD,G;;KAAAA,G;;AAiBT,SAASG,IAAT,GAAgB;EAAA;;EAEd,MAAMF,KAAK,GAAGH,UAAU,CAACC,OAAD,CAAxB;EACA,oBACE;IAAA,wBACE;MAAA,4EAAsBE,KAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;IAVQE,I;;MAAAA,I;;AAcT,SAASC,IAAT,GAAgB;EAAA;;EAEd,MAAMH,KAAK,GAAGH,UAAU,CAACC,OAAD,CAAxB;EACA,oBACE;IAAA,oDAAkBE,KAAlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,C,CAMD;;;IAZSG,I;;MAAAA,I;AAaT,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}